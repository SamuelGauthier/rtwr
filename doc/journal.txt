2017-09-06 10:00 Meeting with supervisor

* The chosen topic is an advanced one and very broad.
* Take into account the level of details (LOD)
* Screen (pixel) space or vertex space?
* First search what methods exist (preferably simple ones) and group them.
  (=1/3 of the work ~2 weeks)
  Select a couple of methods, go into them in greater depth. (1/3 of work)
  The work done should lead to a vision for the bcs thesis. (1/3)
  If there is already a short demo/result, it is a +.
* Decide what technology to use: SLProject, 0 a.d. engine, Unity or custom
  solution? Look carefully to see if the 0 a.d. engine is worth it: code
  complexity, readability. Is it easy to add a functionality? Is it possible
  to launch the engine with a single plane and one object, i.e. without GUI
  and unnecessary stuff.
* For Unity there is AQUAS or Ceto.
* Communicate with the devs of 0 a.d. to know what shader language they use
  (GLSL if they use OpenGL, HLSL). Also ask them about the expected
  performance.
* Document the facts, what has been done (like a scientific paper).
* Is the documentation well made it shouldn't take weeks to implement the
  proposed solution.

2017-09-08 10:00 Research material

I found a lot of interesting papers about water rendering in realtime. The
most interesting one is "Large-scale interactive water simulation with
directional waves" presented at SIGGRAPH 2017. It claims to accurately render
in realtime a 4km times 4km map of water with objects. Unfortunately only
a summary and video is available at the moment. Other interesting findings are
"Water Technology of Uncharted", "Sea Surface Visualization in World of
Warships", "Water Flow in Portal 2", "Water Wave Packets", "Real-Time
Interactive Fluid Animation Technique based on Linear Convolution", "Realistic
Water Volumes in Real-Time".

2017-09-09 16:00 Started skimming through papers

Created a list with relevant papers and material. Found a presentation about
the water rendering in World of Warships that seems more accurate than the
method from "Large-Scale Interactive Water Simulation With Directional Waves".
I watched the conference presentation from the latter but it wasn't
convincing. There is still a lot of material to understand and analyze.

2017-09-11 10:00 Reading papers
Today I began to read the presentation of Naughty Dog about the water
rendering in Uncharted 3. There is a lot of material that I don't understand
yet. But they provided additional and interesting references. I updated my
documentation file accordingly. I also found a nice tutorial about OpenGL
which I will begin tomorrow.

2017-09-12 10:00 Uncharted 3 and OpenGL

- Finished to read the Uncharted 3 presentation. Not quite understood
  everything. Added some more found references.
- Started an OpenGL tutorial.

2017-09-15 13:00 Compile 0 a.d.

Tried to compile 0 A.D. and got linker error with nghttp2 and libcurl. The
Alpha 21 compiled seamlessly but the 22 does not.

2017-09-16 15:00 Built 0 a.d.
successfully, error with SLProject

After many attempts I could compile 0 a.d. at last. I added
the "--without-nghttp2" option to the library build shell script.
I have now trouble to compile SLProject because of webp even if it is
installed. I have to remember which trick I used to compile it some time ago.

2017-09-19 22:19 Contacted the responsible person about water rendering in 0 a.d.

2017-09-20 13:19 Read the presentation about water rendering in World of Warships, continued the OpenGl tutorial

* The main idea they had is to add two more stages to the water rendering
  process in between Mesh generation and Optical based shading (Wave synthesis
  -> Mesh generation -> Optical based shading). This two stages are:
  "Per-pixel improving" and "Sub-pixel calculation". The have a new reflection
  and shadow formula.
  They use three different heightmaps, a special anti-aliasing method based on
  Newton's method and a projection grid.
* Continued the OpenGL tutorial and displayed my first red triangle.

2017-09-21 22:23 Began to read the Project Grid Concept for water rendering

Almost every solution implemented in the game industry references this master
thesis. The main idea is to use a plane which has different level of details
and use a generated perlin noise texture as a heightmap.

2017-09-23 10:00 Continued to read the projection grid paper

2017-09-24 20:05 Read the "Concept" section but didn't understand everything

2017-09-25 21:42 Finished the master project grid master thesis

There is still a lot of material that I don't know/don't understand explained
in the paper.

2017-09-27 00:00 Overview of 2 papers and a GDC conference paper

* Wave particle, Yuskel 2007
* Realistic water volumes in real-time, Galin 2006
* Oceans on a Shoestring: Shape Representation, Meshing and Shading, Bowles
  2013 @GDC
* Continued OpenGL tutorial

Almost everyone references the project grid approach for rendering water. The
Wave particle paper is useful for wakes and ripples. Galin 2006 uses two
heightmaps for the water and photon beams for caustics.

2017-09-28 19:00 Read papers and continued OpenGL tutorial

2017-09-30 17:00 Ocean whitecaps

Read a paper about the rendering of ocean whitecaps. They implemented their
solution with OpenGL. Two passes are made: the first computes the formulated
equations and stores a 2D mipmap and the second renders the projected grid and
computes another equation.

Again I see that the method with the projected grid is used.

2017-10-01 17:00 Continued OpenGL tutorial

2017-10-02 10:00 Overview of papers

Overview of two papers, one rendering water with particles and the other with
wave packets. For the water packets found the demo.
The method with particles has one drawback: it doesn't support well rendering
many objects which is a deal breaker.
The other one uses wave packets like wavelets and has some unrealistic
behaviors.
Found thanks to the wave packets paper a survey about all rendering techniques
for oceans from 2011.

2017-10-03 15:13 Started reading survey and continued OpenGL tutorial

2017-10-04 09:48 Meeting with supervisor

* Presented list of found papers with survey. Difficulty understanding the
  formuals and OpenGL, GLSL.
  SLProject contains simple sharders and the computer graphics script explains
  OpenGL and GLSL. Using these two will allow to get a basic understanding of
  shaders. There are also advanced shaders to go further.

* Problem with compilation/execution of SLProject.
  Due to the new Xcode update, Qt Creator is "broken". Every time Xcode
  updates there is the same problem. Google the solution and document it.

* Professor said former student has implemented a water shader in Unity.
  Look if his solution appears in the survey paper.

2017-10-09 22:59 update documentation

2017-10-12 22:13 continued opengl tutorial, slproject still doesn't compile.

2017-10-16 21:59 paper overview of A simple model of ocean waves by Fournier

To read next: gpu gems chapters and doctoral thesis about water rendering in
games.

2017-10-17 21:36 tried to compile SL Project on windows => failed, problem with opencv.lib;
tried to compile "     "    on mac with the new command line tools => failed

2017-10-18 23:16 doc thesis, shader and toc

* Begin to read doctoral thesis about water in games
* Begin shader tutorial and continued OpenGL tutorial
* Modified TOC of paper

2017-10-23 21:55 continued shader tutorial, prepared meeting

2017-10-25 09:00 Meeting with supervisor

1. SLPorject not working => glslviewer as solution
   A: No, only for small examples, environment has to be taken into account.
      The topic is complex and a large amount of variables have to be taken
      into account. Skybox, underwater, refraction, reflexion, etc.  You can't
      only work with shaders.

2. Is the TOC ok? How much should I talk about what?
3. Project 2 report vs Bachelor thesis text.
   A: There is no need to present a big text for project 2.
      Top-down and bottom up approach. Work in parallel on the two sides,
      creating an environment, opengl and do research at the same time.
      Look at the script and its sections about water.
      If you use a game, explain the project, how it is organized, how the
      documentation is organized.

2017-10-28 16:00 Setup Opengl blank project.
Some libraries not found.

2017-10-30 16:33 Finished to setup OpenGL blank project with Cmake working
and and libraries detected on the system if present. Found a nice Cmake module
from Pixar to find glfw.

2017-10-31 18:16 Continued to work on application.
The goal is to create
a simple plane and animate it. Begin to realize that the topic is quite
complex.

2017-11-01 11:59 Continued to set up the custom OpenGL application, currently reading a chapter
from GPU gems about water.

Discussion with supervisor: a good goal to achieve is to get a skybox with
a water plane up and running. The topic is difficult, but in order to learn
how it works, the bottom-up approach is needed.

2017-11-04 18:06 Continue to set up application.

2017-11-06 17:24 Using indices instead of triangle strips to draw the
plane.

2017-11-07 21:47 Start to implement the indexed plane.
Not found the best solution yet.

2017-11-08 13:00 Created a simple plane displayed as a mesh.

2017-11-13 22:01 Problem when rendering the plane with the index and size of vertex array.
For
the moment the plane has depth 0 (z=0).

2017-11-15 10:24 Successfully rendered a plane.

2017-11-16 18:20 Camera rotation implemented

2017-11-19 13:51 Working on the skybox

2017-11-22 10:29 Skybox complete, now optimisation and code clean up.

2017-11-23 18:23 Plane has a perspective bug, couldn't fix it for now.

2017-11-26 16:57 Begin to clean up the code

2017-11-27 17:06 Try to fix the perspective bug, no luck, begin to setup latex
document.

2017-11-28 16:48 Latex document setup complete.

2017-11-29 10:32 Finally fixed the plane bug, yay!

2017-11-30 18:12 Begin to put things into classes

2017-12-01 23:03 Finished to clean up the code.

2017-12-02 21:57 Researched about the ocean simulation, Gerstner waves, Navier-Stokes equations
and FFT

2017-12-04 11:02 Begin to work on the reflection

2017-12-05 12:17 Animated the plane with a simple sin and cos combination

2017-12-06 11:47 Plane animation
Tried to animate the plane with a more complex function like the one described
in gpu gems 2 but no luck

2017-12-09 16:07 Tried to play with the parameters of waves to get a good result, no success.

2017-12-10 12:08 First test with Phong, reflection and refraction
